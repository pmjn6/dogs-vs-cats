GPU, CUDA
Amazon GPU is called P2(you ask permission)
Email you email address to Mendy, she with ask Amazon for P2 permission
In our wiki, there is instruction for how to set up (check OVH, it’s very cheap https://www.ovh.com/us/dedicated-servers/gpu/)
AWS instance == server
AWS t2.micro is free and works on small data set.
Deeplearning amateur apps. 

Keras building powerful image classification models using very little data

env = ipython notebook
Where to get are the aliases?
download bunch of aliases from 
http://www.platform.ai/files/
to be able to start and stop AWS very quick aws.alias.sh

easiest way use wget. i.e type  in your console 
$wget http://www.platform.ai/files/aws-alias.sh
then 
$cat aws-alias.sh to get the list of all downloaded files
Then type 
$source aws-alias.sh just runs the file it causes all file names to appear on screen
then run
$aws-get-p2
it asks amazon for my p2 instance. 
save it to instanceID
and all my 
$aws-start
elastic ip: it stays the same all the time 
then run
$ssh ubuntu@instanceIP  check time 25
AMI is an snapshot of your machine at a specific time 

assume we have a directory called abs
go ahead and type 
$cd abs
and then
$jupyter notebook 

jupyter runs on local machine http://localhost:8888/
what you need to do, replace http://localhost with the ipad dress given above

http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html:
An Amazon Machine Image (AMI) provides the information required to launch an instance, which is a virtual server in the cloud. You specify an AMI when you launch an instance, and you can launch as many instances from the AMI as you need. You can also launch instances from as many different AMIs as you need.
An AMI includes the following:
	•	A template for the root volume for the instance (for example, an operating system, an application server, and applications) 
	•	Launch permissions that control which AWS accounts can use the AMI to launch instances 
	•	A block device mapping that specifies the volumes to attach to the instance when it's launched 







merckactivity/leaderboard/private
Merckactivity on gaggle top 50% means your model is OK

first challenge is dogs vs cats on Kaggle 
/c/dogs-vs-cats

$screen -S nameofthesession
nameofthesession$echo 0
nameofthesession$ press ctrl+a c    	opens a new window in a session
nameofthesession$ press ctrl+a w 	to see all your windows in this session
nameofthesession$ press ctrl+a n/p 	to go to the next/previous t session
nameofthesession$ press ctrl+a d		to detach from the session
nameofthesession$ press ctrl+a k		kill the current window in the session 
$screen -ls					gives you list of all the sessions 
$screen -X nameofthesession	quit	to terminate the session
https://www.youtube.com/watch?v=I4xVn6Io5Nw

$lesss jermy\’s\nb.ipnb


$vim .bashrc 
then edit it to include 
source aws-alias.sh

$aws-get-p2



